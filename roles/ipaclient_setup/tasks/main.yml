---
- name: "create {{ipaclient_autohome_dir}}"
  ansible.builtin.file:
      path: "{{ipaclient_autohome_dir}}"
      state: directory
      mode: '0755'

- name: check for autofs in /etc/sssd/sssd.conf
  ansible.builtin.shell:
    cmd: grep '^services *=' /etc/sssd/sssd.conf | grep -q autofs
  register: autofsEnabled
  failed_when: autofsEnabled.rc >= 2
  changed_when: autofsEnabled.rc == 1

- name: setup automount as the ipaclient module did not do it correctly
  when: autofsEnabled.rc == 1
  ansible.builtin.replace:
    path: /etc/sssd/sssd.conf
    regexp: '^(services *= *[^\n]*)$'
    replace: '\1, autofs'
  register: service_autofs_changed


- name: check for homedir in /etc/sssd/sssd.conf
  ansible.builtin.shell:
    cmd: grep '^homedir_substring *=' /etc/sssd/sssd.conf | grep -v -q '= */home *$'
  register: homedirCorrect
  failed_when: homedirCorrect.rc >= 2
  changed_when: homedirCorrect.rc == 1

- name: setup homedir as the ipaclient module did not do it correctly
  when: homedirCorrect.rc == 1
  ansible.builtin.replace:
    path: /etc/sssd/sssd.conf
    regexp: '^homedir_substring *= [^\n]*$'
    replace: 'homedir_substring = {{ipaclient_autohome_dir}}'
  register: homedir_substring_changed


- name: add missing automount config to /etc/sssd/sssd.conf
  ansible.builtin.lineinfile:
    path: /etc/sssd/sssd.conf
    line: autofs_provider = ipa
    insertbefore: '^\[sssd\]$'
  register: autofs_provider_changed

- name: add missing automount config to /etc/sssd/sssd.conf
  ansible.builtin.lineinfile:
    path: /etc/sssd/sssd.conf
    line: ipa_automount_location = default
    insertbefore: '^\[sssd\]$'
  register: automount_location_changed

- name: restart sssd after changes in /etc/sssd/sssd.conf
  when: autofs_provider_changed.changed or
    automount_location_changed.changed or
    homedir_substring_changed.changed or
    service_autofs_changed.changed
  ansible.builtin.systemd:
    service: sssd
    state: restarted


- name: "Mount {{ipaclient_syshome_dir}}"
  ansible.builtin.mount:
      path: "{{ipaclient_syshome_dir}}"
      src: "{{ipa_server}}:{{ipaserver_syshome_dir}}"
      fstype: "nfs4"
      opts: "rw,defaults,_netdev,hard,intr,_netdev"
      state: mounted


- name: ensure ipa is reloaded
  ansible.builtin.shell:
    cmd: sss_cache -E

- name: set correct ccache
  ansible.builtin.replace:
    path: /etc/krb5.conf
    regexp: 'default_ccache_name.*'
    replace: 'default_ccache_name = /tmp/krb5cc_%{uid}'

- name: set correct ccache 2
  ansible.builtin.replace:
    path: /etc/krb5.conf.d/kcm_default_ccache
    regexp: '^( *default_ccache_name *= *KCM: *)'
    replace: '#\1'

- name: stop sssd KCM service
  ansible.builtin.systemd:
    state: stopped
    service: sssd-kcm.service
    enabled: no

- name: stop sssd KCM socket service
  ansible.builtin.systemd:
    state: stopped
    service: sssd-kcm.socket
    enabled: no

- name: restart sssd service
  ansible.builtin.systemd:
    state: restarted
    service: sssd.service
    enabled: yes


- name: Upload Kerberos profile files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/profile.d/"
    mode: 0644
    owner: "root"
    group: "root"
  with_fileglob:
    - "templates/*"