- connection: ssh
  become: yes
  become_user: root
  remote_user: root
  delegate_to: "{{new_vm_ip}}"

  block:
    # There is almost certainly a better way of doing this but this works
    - name: "change hostname"
      ansible.builtin.hostname:
        name: "{{hostname}}"
#        use: systemd

    - name: "Setup wonky ping systemd service"
      template:
        src: "activate_network.service"
        dest: /etc/systemd/system/
        mode: 0644
        owner: "root"
        group: "root"

    - name: "Enable wonky ping systemd service"
      systemd:
        name: activate_network
        state: stopped
        daemon_reload: yes
        enabled: true


    - name: "setup network {{nic1}}"
      shell: >
        nmcli con add
          type ethernet
          con-name "{{nic1}}"
          ifname ens3
          ipv4.method manual
          ipv4.addresses "{{nic1_subnet}}.{{hostnumber}}/24"
          ipv4.dns "{{dns1}},{{dns2}}"
          ipv4.dns-search "{{dns_search_domains}}"
          ipv4.gateway "{{gateway}}"

    - name: "setup network {{nic2}}"
      shell: >
        nmcli con add
          type ethernet
          con-nam4 "{{nic2}}"
          ifname ens4
          ipv4.method manual
          ipv4.addresses "{{nic2_subnet}}.{{hostnumber}}/24"
          ipv4.routes "{{nic2_routes}}"

    - name: "remove old networks"
      shell: |
        nmcli con del ens4
        nmcli con del ens3


- name: "Reboot vm to activate new networks"
  ovirt.ovirt.ovirt_vm:
    auth: "{{ ovirt_auth }}"
    state: reboot
    name: "{{shortname}}"
    cluster: "{{ovirt_cluster}}"
    wait: yes
