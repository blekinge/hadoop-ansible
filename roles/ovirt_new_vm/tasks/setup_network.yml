- connection: ssh
  vars:
    pipelining: no
    ansible_ssh_pipelining: no
  become: yes
  become_user: root
  remote_user: root
  delegate_to: "{{new_vm_ip}}"

  block:
    # There is almost certainly a better way of doing this but this works
    - name: "change hostname"
      ansible.builtin.hostname:
        name: "{{hostname}}"
#        use: systemd



    - name: "Setup wonky ping systemd service"
      template:
        src: "activate_network.service"
        dest: /etc/systemd/system/
        mode: 0644
        owner: "root"
        group: "root"

    - name: "Enable wonky ping systemd service"
      systemd:
        name: activate_network
        state: stopped
        daemon_reload: yes
        enabled: true


    - name: "remove old networks ens4"
      community.general.nmcli:
        conn_name: 'ens4'
        state: absent

    - name: "setup network {{nic2}}"
      community.general.nmcli:
        type: ethernet
        conn_name: '{{nic2}}'
        ifname: ens4
        ip4: '{{nic2_subnet}}.{{hostnumber}}/24'
        autoconnect: yes
        state: present

    - name: "setup network {{nic2}} routes, which cannot be done in ansible yet"
      shell: 'nmcli con mod {{nic2}} ipv4.routes "{{nic2_routes}}"'



    - name: "setup network {{nic1}}"
      vars:
        timeout: 10
      async: 10
      community.general.nmcli:
        type: ethernet
        conn_name: '{{nic1}}'
        ifname: ens3
        ip4: '{{nic1_subnet}}.{{hostnumber}}/24'
        gw4: '{{gateway}}'
        dns4:
          - '{{dns1}}'
          - '{{dns2}}'
        dns4_search: '{{[domain,domain_nfs,domain_adm,domain_dmz]}}'
        autoconnect: yes
        state: present

    - name: "remove old networks ens3"
      community.general.nmcli:
        conn_name: 'ens3'
        state: absent
    #          shell: "nmcli con del ens4; nmcli con del ens3;"

- name: "Reboot vm to activate new networks"
  ovirt.ovirt.ovirt_vm:
    auth: "{{ ovirt_auth }}"
    state: reboot
    name: "{{shortname}}"
    cluster: "{{ovirt_cluster}}"
    wait: yes
