<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<configuration>
    <property>
        <name>spark.authenticate</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.acl.enable</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.admin.acl</name>
        <value>yarn,dr.who,abrsadm</value>
    </property>
    <property>
        <name>yarn.application.classpath</name>
        <value>{{ hadoop_config_path }},{{hadoop_path}}/hadoop-{{hadoop_version}}/lib/*</value>
    </property>
    <property>
        <name>yarn.client.nodemanager-connect.max-wait-ms</name>
        <value>60000</value>
    </property>
    <property>
        <name>yarn.client.nodemanager-connect.retry-interval-ms</name>
        <value>10000</value>
    </property>
    <property>
        <name>yarn.http.policy</name>
        <value>HTTPS_ONLY</value>
    </property>
    <property>
        <name>yarn.log-aggregation-enable</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.log-aggregation.file-controller.IndexedFormat.class</name>
        <value>org.apache.hadoop.yarn.logaggregation.filecontroller.ifile.LogAggregationIndexedFileController</value>
    </property>
    <property>
        <name>yarn.log-aggregation.file-controller.TFile.class</name>
        <value>org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController</value>
    </property>
    <property>
        <name>yarn.log-aggregation.file-formats</name>
        <value>IndexedFormat,TFile</value>
    </property>
    <property>
        <name>yarn.log-aggregation.retain-seconds</name>
        <value>2592000</value>
    </property>
    <property>
        <name>yarn.log.server.url</name>
        <value>http://{{ mapreduce_history_server_host }}:{{mapreduce_history_server_https_port}}/jobhistory/logs</value>
    </property>
    <property>
        <name>yarn.log.server.web-service.url</name>
        <value>http://{{ yarn_timelineserver }}:{{yarn_timelineserver_http_port}}/ws/v1/applicationhistory</value>
    </property>
    <property>
        <name>yarn.node-labels.enabled</name>
        <value>false</value>
    </property>
    <property>
        <name>yarn.node-labels.fs-store.retry-policy-spec</name>
        <value>2000, 500</value>
    </property>
    <property>
        <name>yarn.node-labels.fs-store.root-dir</name>
        <value>/system/yarn/node-labels</value>
    </property>

    <property>
        <name>yarn.nodemanager.address</name>
        <value>0.0.0.0:{{yarn_nodemanager_port}}</value>
    </property>
    <property>
        <name>yarn.nodemanager.admin-env</name>
        <value>MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX</value>
    </property>
    <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
    </property>
    <property>
        <name>yarn.nodemanager.aux-services.mapreduce_shuffle.class</name>
        <value>org.apache.hadoop.mapred.ShuffleHandler</value>
    </property>
    <property>
        <name>yarn.nodemanager.bind-host</name>
        <value>0.0.0.0</value>
    </property>
    <property>
        <name>yarn.nodemanager.container-executor.class</name>
        <value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
    </property>
    <property>
        <name>yarn.nodemanager.container-metrics.unregister-delay-ms</name>
        <value>60000</value>
    </property>
    <property>
        <name>yarn.nodemanager.container-monitor.interval-ms</name>
        <value>3000</value>
    </property>
    <property>
        <name>yarn.nodemanager.delete.debug-delay-sec</name>
        <value>0</value>
    </property>
    <property>
        <name>yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage</name>
        <value>90</value>
    </property>
    <property>
        <name>yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.nodemanager.disk-health-checker.min-healthy-disks</name>
        <value>0.25</value>
    </property>
    <property>
        <name>yarn.nodemanager.health-checker.interval-ms</name>
        <value>135000</value>
    </property>
    <property>
        <name>yarn.nodemanager.health-checker.script.timeout-ms</name>
        <value>60000</value>
    </property>
    <property>
        <name>yarn.nodemanager.kill-escape.launch-command-line</name>
        <value>slider-agent,LLAP</value>
    </property>
    <property>
        <name>yarn.nodemanager.kill-escape.user</name>
        <value>hive</value>
    </property>
    <property>
        <name>yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage</name>
        <value>false</value>
    </property>
    <property> <!--This should match field in container-executor.cfg -->
        <name>yarn.nodemanager.linux-container-executor.group</name>
        <value>{{ hadoop_group }}</value>
    </property>
    <property> <!--This should match field in container-executor.cfg -->
        <name>yarn.nodemanager.local-dirs</name>
        <value>{{ yarn_data_dirs_joined }}</value>
    </property>
    <property> <!--This should match field in container-executor.cfg -->
        <description>
            Where to store container logs. An application's localized log directory
            will be found in ${yarn.nodemanager.log-dirs}/application_${appid}.
            Individual containers' log directories will be below this, in directories
            named container_{$contid}. Each container directory will contain the files
            stderr, stdin, and syslog generated by that container.
        </description>
        <name>yarn.nodemanager.log-dirs</name>
        <value>{{ yarn_application_logs_dir }}</value>
    </property>

    <property>
        <name>yarn.nodemanager.localizer.cache.cleanup.interval-ms</name>
        <value>600000</value>
    </property>
    <property>
        <name>yarn.nodemanager.localizer.cache.target-size-mb</name>
        <value>10240</value>
    </property>
    <property>
        <name>yarn.nodemanager.log-aggregation.compression-type</name>
        <value>gz</value>
    </property>
    <property>
        <name>yarn.nodemanager.log-aggregation.debug-enabled</name>
        <value>false</value>
    </property>
    <property>
        <name>yarn.nodemanager.log-aggregation.num-log-files-per-app</name>
        <value>336</value>
    </property>
    <property>
        <name>yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds</name>
        <value>3600</value>
    </property>

    <property>
        <name>yarn.nodemanager.log.retain-seconds</name>
        <value>2592000</value>
    </property>
    <property>
        <name>yarn.nodemanager.pmem-check-enabled</name>
        <value>false</value>
    </property>

    <property>
        <name>yarn.nodemanager.recovery.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.nodemanager.remote-app-log-dir</name>
        <value>/history/app-logs</value>
    </property>
    <property>
        <name>yarn.nodemanager.remote-app-log-dir-suffix</name>
        <value>logs</value>
    </property>
    <property>
        <name>yarn.nodemanager.resource.cpu-vcores</name>
        <value>{{yarn_nodemanager_available_cpu_cores}}</value>
    </property>
    <property>
        <name>yarn.nodemanager.resource.memory-mb</name>
        <value>{{yarn_nodemanager_available_memory}}</value>
    </property>
    <property>
        <name>yarn.nodemanager.resource.percentage-physical-cpu-limit</name>
        <value>90</value>
    </property>
    <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
    </property>
    <property>
        <name>yarn.nodemanager.vmem-pmem-ratio</name>
        <value>2.1</value>
    </property>


    <property>
        <name>yarn.resourcemanager.am.max-attempts</name>
        <value>2</value>
    </property>
    <property>
        <name>yarn.resourcemanager.bind-host</name>
        <value>0.0.0.0</value>
    </property>
    <property>
        <name>yarn.resourcemanager.connect.max-wait.ms</name>
        <value>900000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.connect.retry-interval.ms</name>
        <value>15000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.fs.state-store.retry-policy-spec</name>
        <value>2000, 500</value>
    </property>
    <property>
        <name>yarn.resourcemanager.fs.state-store.uri</name>
        <value></value>
    </property>
    <property>
        <name>yarn.resourcemanager.max-completed-applications</name>
        <value>20000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.monitor.capacity.preemption.max_ignored_over_capacity</name>
        <value>0.1</value>
    </property>
    <property>
        <name>yarn.resourcemanager.monitor.capacity.preemption.max_wait_before_kill</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.monitor.capacity.preemption.monitoring_interval</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.monitor.capacity.preemption.natural_termination_factor</name>
        <value>0.5</value>
    </property>
    <property>
        <name>yarn.resourcemanager.monitor.capacity.preemption.total_preemption_per_round</name>
        <value>1.0</value>
    </property>
    <property>
        <name>yarn.resourcemanager.nodes.exclude-path</name>
        <value>{{ hadoop_config_path }}/yarn.exclude</value>
    </property>
    <property>
        <name>yarn.resourcemanager.proxy-user-privileges.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.proxyuser.*.groups</name>
        <value></value>
    </property>
    <property>
        <name>yarn.resourcemanager.proxyuser.*.hosts</name>
        <value></value>
    </property>
    <property>
        <name>yarn.resourcemanager.proxyuser.*.users</name>
        <value></value>
    </property>
    <property>
        <name>yarn.resourcemanager.recovery.enabled</name>
        <value>true</value>
    </property>

    <property>
        <name>yarn.resourcemanager.scheduler.class</name>
        <value>org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler</value>
    </property>
    <property>
        <name>yarn.resourcemanager.scheduler.monitor.enable</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.scheduler.monitor.policies</name>
        <!--The system chokes on whitespaces in this name, do do NOT linebreak it-->
        <value>org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy</value>
    </property>
    <property>
        <name>yarn.resourcemanager.state-store.max-completed-applications</name>
        <value>${yarn.resourcemanager.max-completed-applications}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.store.class</name>
        <value>org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore</value>
    </property>
    <property>
        <name>yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size</name>
        <value>10</value>
    </property>
    <property>
        <name>yarn.resourcemanager.system-metrics-publisher.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled</name>
        <value>false</value>
    </property>

    <property>
        <name>yarn.resourcemanager.work-preserving-recovery.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms</name>
        <value>10000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.zk-num-retries</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.zk-retry-interval-ms</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.resourcemanager.zk-state-store.parent-path</name>
        <value>/rmstore</value>
    </property>
    <property>
        <name>yarn.resourcemanager.zk-timeout-ms</name>
        <value>10000</value>
    </property>

    <property>
        <name>yarn.scheduler.capacity.ordering-policy.priority-utilization.underutilized-preemption.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>{{yarn_scheduler_max_memory}}</value>
    </property>
    <property>
        <name>yarn.scheduler.maximum-allocation-vcores</name>
        <value>{{yarn_scheduler_max_cpu_cores}}</value>
    </property>
    <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>{{yarn_scheduler_min_memory}}</value>
    </property>
    <property>
        <name>yarn.scheduler.minimum-allocation-vcores</name>
        <value>{{yarn_scheduler_min_cpu_cores}}</value>
    </property>

    <property>
        <name>yarn.timeline-service.address</name>
        <value>{{ yarn_timelineserver }}:{{yarn_timelineserver_port2}}</value>
    </property>
    <property>
        <name>yarn.timeline-service.bind-host</name>
        <value>0.0.0.0</value>
    </property>
    <property>
        <name>yarn.timeline-service.client.fd-flush-interval-secs</name>
        <value>5</value>
    </property>
    <property>
        <name>yarn.timeline-service.client.max-retries</name>
        <value>30</value>
    </property>
    <property>
        <name>yarn.timeline-service.client.retry-interval-ms</name>
        <value>1000</value>
    </property>
    <property>
        <name>yarn.timeline-service.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.active-dir</name>
        <value>/history/timeline-server/active/</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.app-cache-size</name>
        <value>10</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds</name>
        <value>3600</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.done-dir</name>
        <value>/history/timeline-server/done/</value>
    </property>

    <property>
        <name>yarn.timeline-service.entity-group-fs-store.retain-seconds</name>
        <value>2592000</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.scan-interval-seconds</name>
        <value>15</value>
    </property>
    <property>
        <name>yarn.timeline-service.entity-group-fs-store.summary-store</name>
        <value>org.apache.hadoop.yarn.server.timeline.RollingLevelDBTimelineStore</value>
    </property>
    <property>
        <name>yarn.timeline-service.generic-application-history.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.timeline-service.generic-application-history.fs-history-store.uri</name>
        <value>/history/timeline-server/generic-history</value>
    </property>
    <property>
        <name>yarn.timeline-service.generic-application-history.max-applications</name>
        <value>30000</value>
    </property>
    <property>
        <name>yarn.timeline-service.generic-application-history.store-class</name>
        <value>org.apache.hadoop.yarn.server.applicationhistoryservice.FileSystemApplicationHistoryStore</value>
    </property>
    <property>
        <name>yarn.timeline-service.http-authentication.simple.anonymous.allowed</name>
        <value>false</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-state-store.path</name>
        <value>{{ yarn_timeline_store }}</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.max-open-files</name>
        <value>500</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.path</name>
        <value>{{ yarn_timeline_store }}</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.read-cache-size</name>
        <value>4194304</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size</name>
        <value>10000</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size</name>
        <value>10000</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms</name>
        <value>300000</value>
    </property>
    <property>
        <name>yarn.timeline-service.leveldb-timeline-store.write-buffer-size</name>
        <value>4194304</value>
    </property>
    <property>
        <name>yarn.timeline-service.recovery.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.timeline-service.rolling-period</name>
        <value>daily</value>
    </property>
    <property>
        <name>yarn.timeline-service.state-store-class</name>
        <value>org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore</value>
    </property>
    <property>
        <name>yarn.timeline-service.store-class</name>
        <value>org.apache.hadoop.yarn.server.timeline.EntityGroupFSTimelineStore</value>
    </property>
    <property>
        <name>yarn.timeline-service.ttl-enable</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.timeline-service.ttl-ms</name>
        <value>2592000000</value>
    </property>
    <property>
        <name>yarn.timeline-service.version</name>
        <value>1.5</value>
    </property>
    <property>
        <name>yarn.timeline-service.webapp.address</name>
        <value>{{ yarn_timelineserver }}:{{yarn_timelineserver_http_port}}</value>
    </property>
    <property>
        <name>yarn.timeline-service.webapp.https.address</name>
        <value>{{ yarn_timelineserver }}:{{yarn_timelineserver_https_port}}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>YAK-YARN</value>
    </property>



    <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>{{ groups['resource_managers'] | join(',') }}</value>
    </property>
    {% for resource_manager in groups['resource_managers'] %}
    <property>
        <name>yarn.resourcemanager.hostname.{{resource_manager}}</name>
        <value>{{ resource_manager }}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.address.{{resource_manager}}</name>
        <value>{{resource_manager}}:{{yarn_resourcemanager_rpc_port}}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.scheduler.address.{{resource_manager}}</name>
        <value>{{resource_manager}}:{{yarn_resourcemanager_scheduler_port}}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.resource-tracker.address.{{resource_manager}}</name>
        <value>{{resource_manager}}:{{yarn_resourcemanager_tracker_port}}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.admin.address.{{resource_manager}}</name>
        <value>{{ resource_manager }}:{{yarn_resourcemanager_admin_port}}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.webapp.address.{{resource_manager}}</name>
        <value>{{resource_manager}}:{{yarn_resourcemanager_http_port}}</value>
    </property>


    <property>
        <name>yarn.resourcemanager.webapp.https.address.{{resource_manager}}</name>
        <value>{{resource_manager}}:{{yarn_resourcemanager_https_port}}</value>
    </property>


    {% endfor %}


    <property>
        <name>hadoop.zk.address</name>
        <value>{{zookeeper_quorum}}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>{{zookeeper_quorum}}</value>
    </property>

    <property>
        <name>hadoop.registry.client.auth</name>
        <value>kerberos</value>
    </property>
    <property>
        <name>hadoop.registry.jaas.context</name>
        <value>Client</value>
    </property>
    <property>
        <name>hadoop.registry.rm.enabled</name>
        <value>false</value>
    </property>
    <property>
        <name>hadoop.registry.secure</name>
        <value>true</value>
    </property>
    <property>
        <name>hadoop.registry.system.accounts</name>
        <value>sasl:{{ yarn_user}},sasl:{{mapreduce_user}},sasl:{{hadoop_group}},sasl:{{hdfs_user}},sasl:{{ yarn_resourcemanager_service_name }}</value>
    </property>
    <property>
        <name>hadoop.registry.zk.quorum</name>
        <value>{{zookeeper_quorum}}</value>
    </property>

    <!--    Kerberos-->
    <property>
        <name>yarn.nodemanager.principal</name>
        <value>{{ yarn_nodemanager_service_name }}/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.nodemanager.keytab</name>
        <value>{{keytab_dir}}/{{ yarn_nodemanager_service_name }}.service.keytab</value>
    </property>

    <property>
        <name>yarn.nodemanager.webapp.spnego-principal</name>
        <value>HTTP/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.nodemanager.webapp.spnego-keytab-file</name>
        <value>{{keytab_dir}}/spnego.service.keytab</value>
    </property>

    <property>
        <name>yarn.resourcemanager.principal</name>
        <value>{{ yarn_resourcemanager_service_name }}/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.keytab</name>
        <value>{{keytab_dir}}/{{ yarn_resourcemanager_service_name }}.service.keytab</value>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.spnego-principal</name>
        <value>HTTP/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.webapp.spnego-keytab-file</name>
        <value>{{keytab_dir}}/spnego.service.keytab</value>
    </property>

    <property>
        <name>yarn.timeline-service.http-authentication.kerberos.principal</name>
        <value>HTTP/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.timeline-service.http-authentication.kerberos.keytab</name>
        <value>{{keytab_dir}}/spnego.service.keytab</value>
    </property>

    <property>
        <name>yarn.timeline-service.http-authentication.simple.anonymous.allowed</name>
        <value>false</value>
    </property>

    <property>
        <name>yarn.timeline-service.http-authentication.type</name>
        <value>kerberos</value>
    </property>
    <property>
        <name>yarn.timeline-service.principal</name>
        <value>{{ yarn_timelineserver_service_name }}/_HOST@{{ ipaserver_realm }}</value>
    </property>
    <property>
        <name>yarn.timeline-service.keytab</name>
        <value>{{keytab_dir}}/{{ yarn_timelineserver_service_name }}.service.keytab</value>
    </property>


    <property>
        <name>yarn.resourcemanager.zk-acl</name>
        <value>sasl:{{ yarn_resourcemanager_service_name }}:rwcda</value>
    </property>

</configuration>
