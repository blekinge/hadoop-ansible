---

sealbin_user: "sealbin"

keytab_dir: "/etc/security/keytabs"
keytab_permissions: "0400"

temp_keytab_dir: "/tmp/temp_keytabs"

kinit_principal: "{{ ipa_admin_user.name }}@{{ ipaserver_realm }}"

yarn_nodemanager_service_name: "nm"
yarn_resourcemanager_service_name: "rm"
yarn_timelineserver_service_name: "tl"

hdfs_namenode_service_name: "nn"
hdfs_secondary_namenode_service_name: "snn"
hdfs_datanode_service_name: "dn"
hdfs_journalnode_service_name: "jn"

mapreduce_historyserver_service_name: "jhs"
spark_history_server_service_name: "shs"


zookeeper_service_name: "zookeeper"

hive_metastore_service_name: "hms"

hive_server2_service_name: "hs2"


keytab_users:
  - {
    hostgroup: "hostgroup_ipaserver", #Create this keytab on ipaserver and distribute it to all host
    name: "{{ hdfs_user.name }}",
    owner: "{{ hdfs_user.name }}",
    group: "{{ hadoop_group.name }}"
  }

#TODO bind on roles, not hostgroups

keytab_services:

  #  HDFS
  - {
    hostgroup: "hostgroup_hdfs_datanodes",
    name: "{{ hdfs_datanode_service_name }}",
    owner: "{{ hdfs_user.name }}",
    group: "{{ hdfs_user.group }}"
  }
  - {
    hostgroup: "hostgroup_hdfs_namenodes",
    name: "{{ hdfs_namenode_service_name }}",
    owner: "{{ hdfs_user.name }}",
    group: "{{ hdfs_user.group }}"
  }
  - {
    hostgroup: "hostgroup_hdfs_secondary_namenodes",
    name: "{{ hdfs_secondary_namenode_service_name }}",
    owner: "{{ hdfs_user.name }}",
    group: "{{ hdfs_user.group }}"
  }
  - {
    hostgroup: "hostgroup_hdfs_journalnodes",
    name: "{{ hdfs_journalnode_service_name }}",
    owner: "{{ hdfs_user.name }}",
    group: "{{ hdfs_user.group }}"
  }
  - {
    hostgroup: "hostgroup_hadoop_nodes",
    service: "HTTP",
    name: "spnego",
    owner: "root",
    group: "{{ hadoop_group.name }}",
    permissions: "0440"
  }
  #    YARN
  - {
    hostgroup: "hostgroup_yarn_node_managers",
    name: "{{ yarn_nodemanager_service_name }}",
    owner: "{{ yarn_user.name }}",
    group: "{{ yarn_user.group }}"
  }
  - {
    hostgroup: "hostgroup_yarn_resource_managers",
    name: "{{ yarn_resourcemanager_service_name }}",
    owner: "{{ yarn_user.name }}",
    group: "{{ yarn_user.group }}"
  }
  - {
    hostgroup: "hostgroup_yarn_timeline_servers",
    name: "{{ yarn_timelineserver_service_name }}",
    owner: "{{ yarn_user.name }}",
    group: "{{ yarn_user.group }}"
  }
  #    Zookeeper
  - {
    hostgroup: "hostgroup_zookeeper_servers",
    name: "{{ zookeeper_service_name }}",
    owner: "{{ zookeeper_user.name }}",
    group: "{{ zookeeper_user.group }}"
  }

  #    Mapreduce
  - {
    hostgroup: "hostgroup_mapreduce_history_servers",
    name: "{{ mapreduce_historyserver_service_name }}",
    owner: "{{ mapreduce_user.name }}",
    group: "{{ mapreduce_user.group }}"
  }

  #    Spark
  - {
    hostgroup: "hostgroup_spark_history_servers",
    name: "{{ spark_history_server_service_name }}",
    owner: "{{ spark_user.name }}",
    group: "{{ spark_user.group }}"
  }

  #    Hive
  - {
    hostgroup: "hive_servers",
    name: "{{ hive_metastore_service_name }}",
    owner: "{{ hive_user.name }}",
    group: "{{ hive_user.group }}"
  }
  - {
    hostgroup: "hive_servers",
    name: "{{ hive_server2_service_name }}",
    owner: "{{ hive_user.name }}",
    group: "{{ hive_user.group }}"
  }
