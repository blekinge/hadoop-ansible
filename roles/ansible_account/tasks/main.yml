---
- name: "Setup {{sealbin_user}}"
  block:
    - name: "Add {{sealbin_user}} group"
      group:
        name: "{{sealbin_user}}"
        gid: "{{sealbin_user_gid}}"
        state: present

    - name: "Add the user '{{sealbin_user}}' appending the groups 'adm' and 'wheel' to the user's groups"
      user:
        name: "{{sealbin_user}}"
        uid: "{{sealbin_user_uid}}"
        shell: /bin/bash
        group: "{{sealbin_user}}"
        groups: adm,wheel
        append: yes
        create_home: yes
        home: "{{sealbin_home}}"
        state: present

    - name: "Upload sudoers config file to give {{sealbin_user}} sudo rights"
      template:
        src: sudoers
        dest: /etc/sudoers.d/ansible
        owner: root
        group: root
        mode: '0644'


    - name: "Set authorized key for user {{sealbin_user}} copying it from current user"
      ansible.posix.authorized_key:
        user: "{{sealbin_user}}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

- name: configure ssh root logins
  block:

    - name: disable root logins directly
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: PermitRootLogin no
      when: not (permit_root_logins | bool)
      register: root_logins_denied

    - name: enable root logins directly
      remote_user: "{{sealbin_user}}"
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: PermitRootLogin yes
      register: root_logins_permitted
      when: permit_root_logins  | bool

    - systemd:
        service: sshd
        state: reloaded
        enabled: yes
      remote_user: "{{sealbin_user}}"
      when: (root_logins_permitted is defined and root_logins_permitted.changed) or (root_logins_denied is defined and root_logins_denied.changed)

