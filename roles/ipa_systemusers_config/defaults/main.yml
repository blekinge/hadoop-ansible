---
# https://github.com/freeipa/ansible-freeipa/blob/master/roles/ipaclient/README.md#base-variables

ipa_domain: "{{ domain }}"
ipa_realm: "{{ domain | upper }}"

ipaclient_domain: "{{ ipa_domain }}"
ipaclient_realm: "{{ ipa_realm }}"
ipaserver_domain: "{{ ipa_domain }}"
ipaserver_realm: "{{ ipa_realm }}"

#https://github.com/freeipa/ansible-freeipa/blob/master/roles/ipaclient/README.md
ipaclient_ntp_servers: []

ipasssd_fixed_primary: "yes"
ipaclient_no_dns_lookup: "yes"

ipaclient_allow_repair: "yes"
ipaclient_force_join: "no"

ipa_server: "{{ groups['hostgroup_ipaserver'] | map('extract',hostvars, 'ansible_fqdn') | first }}"

ipa_admin_user:
  name: admin
  group: admins


#Config for Automounted user homedirs
use_autofs_homes: true



ipaclient_autohome_dir: /autohome
ipaserver_autohome_dir: /sto-data/home
#Nessesary to set up the automount
ipaautomount_location: "default"

#Config for static mounted system users homedirs
use_nfs_syshomes: true
ipaserver_syshome_dir: /sto-data/syshome
ipaclient_syshome_dir: /syshome

ipaclient_mkhomedir: "{{ not (use_autofs_homes|bool or use_nfs_syshomes|bool) }}"


hdfs_home_dir: /user

#Users and groups
hadoop_group:
  name: "{{ user_prefix }}hadp"
  gid: "{{ cluster_id_prefix }}200"
  description: Hadoop System Services


subadmins_group:
  name: "{{ user_prefix }}subadm"
  gid: "{{ cluster_id_prefix }}100"
  description: For daily administration of users and hosts


users_group:
  name: "{{ user_prefix }}users"
  gid: "{{ cluster_id_prefix }}300"
  description: Standard user accounts, for unprivileged users.



#These are the user groups that are automatically created
standard_user_groups:
  - "{{ hadoop_group }}"
  - "{{ subadmins_group }}"
  - "{{ users_group }}"

# These groups are also automatically created, and all new users will be made members of them
default_user_groups:
  - "{{ users_group }}"


hdfs_user:
  name: "{{ user_prefix }}hdfs"
  group: "{{ user_prefix }}hdfs"
  uid: "{{ hadoop_group.gid|int+1 }}"
  gid: "{{ hadoop_group.gid|int+1 }}"
  private_group: yes
  extra_groups: [ "{{ hadoop_group.name }}" ]

mapreduce_user:
  name: "{{ user_prefix }}mapr"
  group: "{{ hadoop_group.name }}"
  uid: "{{ hadoop_group.gid|int+2 }}"
  gid: "{{ hadoop_group.gid }}"
  private_group: no

yarn_user:
  name: "{{ user_prefix }}yarn"
  group: "{{ hadoop_group.name }}"
  uid: "{{ hadoop_group.gid|int+3 }}"
  gid: "{{ hadoop_group.gid }}"
  private_group: no

zookeeper_user:
  name: "{{ user_prefix }}zkpr"
  group: "{{ hadoop_group.name }}"
  uid: "{{ hadoop_group.gid|int+4 }}"
  gid: "{{ hadoop_group.gid }}"
  private_group: no

spark_user:
  name: "{{ user_prefix }}sprk"
  group: "{{ hadoop_group.name }}"
  uid: "{{ hadoop_group.gid|int+5 }}"
  gid: "{{ hadoop_group.gid }}"
  private_group: no

hive_user:
  name: "{{ user_prefix }}hive"
  group: "{{ hadoop_group.name }}"
  uid: "{{ hadoop_group.gid|int+6 }}"
  gid: "{{ hadoop_group.gid }}"
  private_group: no

rstudio_user:
  name: "{{ user_prefix }}rstd"
  group: "{{ user_prefix }}rstd"
  uid: "{{ hadoop_group.gid|int+7 }}"
  gid: "{{ hadoop_group.gid|int+7 }}"
  private_group: yes

jupyterhub_user:
  name: "{{ user_prefix }}jhub"
  group: "{{ user_prefix }}jhub"
  uid: "{{ hadoop_group.gid|int+8 }}"
  gid: "{{ hadoop_group.gid|int+8 }}"
  private_group: yes

#Can this be inlined?
_system_users:
  - "{{ hdfs_user }}"
  - "{{ yarn_user }}"
  - "{{ mapreduce_user }}"
  - "{{ zookeeper_user }}"
  - "{{ spark_user }}"
  - "{{ hive_user }}"
  - "{{ rstudio_user if groups['hostgroup_rstudio_nodes'] | length > 0 else omit }}"
  - "{{ jupyterhub_user if groups['hostgroup_jupyter_nodes'] | length > 0 else omit }}"
system_users: "{{ _system_users | reject('equalto', omit) | list }}"
