---

- name: install rsync so we can use ansible synchronize
  package:
    name: rsync
    state: present


- name: Create ssl dirs dir
  file:
    path: "{{ dir }}"
    state: "directory"
    mode: 0755
    owner: root
    group: "{{ hadoop_group.name }}"
  loop:
    - "{{ ssl_server_dir }}"
    - "{{ ssl_client_dir }}"
  loop_control:
    loop_var: "dir"

- name: "uploading ssl certs to hosts"
  throttle: 2
  delegate_to: "{{ groups['hostgroup_ipaserver'] | first }}"
  # Be {{ sealbin_user }} on the src(fipa001) side
  # This allows us to use agent our agent forwarding so {{ ipa_serve }} can ssh to the right host
  synchronize:
    src: "{{ item.file }}"
    dest: "{{ item.dest  }}"
    archive: no
    mode: push
    # Be root on the dest side, so we can create the files in /etc
    rsync_path: sudo rsync
    use_ssh_args: true
  loop:
#      For hadoop
    - file: "{{ temp_ssl_dir }}/{{ ansible_fqdn }}-keystore.p12"
      dest: "{{ ssl_server_dir }}/"

    - file: "{{ temp_ssl_dir }}/all.jks"
      dest: "{{ ssl_server_dir }}/"

    - file: "{{ temp_ssl_dir }}/http_secret"
      dest: "/etc/security/"

#      For rsyslog and others
    - file: "{{ temp_ssl_dir }}/{{ ansible_fqdn }}.crt"
      dest: "{{ ssl_cert_dir }}/"

    - file: "{{ temp_ssl_dir }}/{{ ansible_fqdn }}-private.pem"
      dest: "{{ ssl_key_dir }}/"

    - file: "{{ certificate_authority.certificate_file }}"
      dest: "{{ ssl_cert_dir }}/{{ certificate_authority.certificate_file | basename }}"


- name: "Setting permissions on ssl certificates"
  file:
    path:  "{{ item.file }}"
    mode:  "{{ item.mode  | default('0440') }}" #Not public
    group: "{{ item.group | default(hadoop_group.name) }}"
    owner: "{{ item.owner | default('root') }}"
  loop:
    - file: "{{ ssl_server_dir }}/{{ ansible_fqdn }}-keystore.p12"

    - file: "{{ ssl_cert_dir }}/{{ ansible_fqdn }}.crt"
      mode: '0444'

    - file: "{{ ssl_key_dir }}/{{ ansible_fqdn }}-private.pem" # Used by rsyslog_client (root) and jupyterhub
      mode: '0440'
      group: "{{ jupyterhub_user.name }}"

    - file: "{{ ssl_cert_dir }}/{{ certificate_authority.certificate_file | basename }}"

    - file: "{{ ssl_server_dir }}/all.jks"
      mode: '0444'

    - file: "/etc/security/http_secret"



- name: "Uploading hadoop ssl config to host"
  template:
    src: "{{ item }}"
    dest: "{{ hadoop_config_path }}/"
    mode: 0644
    owner: "root"
    group: "{{ hadoop_group.name }}"
  with_fileglob:
    - "templates/hadoop_conf/*"
