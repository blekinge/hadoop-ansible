---


- name: Create ssl working dir k dir
  file:
    path: "./ssl/"
    state: "directory"
    owner: root
    group: "{{ hadoop_group }}"
    mode: 0750

# Created from https://getthekt.com/securing-hadoop-cluster-part-1-ssltls-for-hdfs-and-yarn/
- name: Create server ssl key
  command: keytool -genkey -alias  {{ ssl_host | quote }} -keyalg rsa -keysize {{ ssl_key_size | quote }} -dname "CN={{ ssl_host }},OU=demo,O=MyOrg,L=Pune,ST=MH,C=IN" -keypass {{ ssl_key_pass | quote }} -keystore ./ssl/{{ ssl_host }}-keystore.jks -storepass {{ ssl_keystore_pass | quote}}
# keytool -genkey -alias nn1.hadoop.com -keyalg rsa -keysize 1024 -dname “CN=nn1.hadoop.com,OU=demo,O=MyOrg,L=Pune,ST=MH,C=IN” -keypass host@123 -keystore nn1-keystore.jks -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}-keystore.jks"
  loop: '{{ groups["all"]  }}'
  loop_control:
    loop_var: "ssl_host"
  when: '"ipaserver" in group_names'


- name: Export the certificate public key to a certificate file
  command: keytool -export -alias {{ ssl_host }} -keystore ./ssl/{{ ssl_host }}-keystore.jks -rfc -file ./ssl/{{ ssl_host }}.crt -storepass {{ ssl_keystore_pass | quote }}
# keytool -export -alias nn1.hadoop.com -keystore nn1-keystore.jks -rfc -file nn1.crt -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}.crt"
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"
  when: '"ipaserver" in group_names'

- name: Import the certificate to the trust store file.
  command: keytool -import -noprompt -alias {{ ssl_host }} -file ./ssl/{{ ssl_host }}.crt -keystore ./ssl/{{ ssl_host }}-truststore.jks -storepass {{ ssl_truststore_pass | quote }}
# keytool -import -noprompt -alias nn1.hadoop.com -file nn1.crt -keystore nn1-truststore.jks -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}-truststore.jks"
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"
  when: '"ipaserver" in group_names'

- name: Create a single trust tore file that contains the public key from all certificates.
  shell: |
    keytool -list -keystore ./ssl/all.jks  -storepass {{ ssl_truststore_pass | quote }}  -alias {{ ssl_host  }} ||
    keytool -import -noprompt -alias {{ ssl_host | quote }} -file ./ssl/{{ ssl_host  }}.crt -keystore ./ssl/all.jks -storepass {{ ssl_truststore_pass | quote }}
  # keytool -import -noprompt -alias nn1.hadoop.com -file nn1.crt -keystore truststore.jks -storepass host@123
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"
  when: '"ipaserver" in group_names'


- name: Create http secret.
  command: dd if=/dev/urandom of=./ssl/http_secret bs=1024 count=1
  args:
    creates: ./ssl/http_secret
  when: '"ipaserver" in group_names'

- name: install rsync
  dnf:
   name: rsync
   state: latest


- name: fetching ssl certificates to localhost
  synchronize:
    src: "{{ item }}"
    dest: ssl/
    mode: pull
  with_items:
      - "./ssl/*"
  when: '"ipaserver" in group_names'

- name: Create ssl dirs dir
  file:
    path: "{{ dir }}"
    state: "directory"
    owner: root
    group: "{{ hadoop_group }}"
    mode: 0750
  loop:
    - "{{ ssl_server_dir }}"
    - "{{ ssl_client_dir }}"
  loop_control:
    loop_var: "dir"

- name: uploading ssl certificates to {{ host }}
  copy:
    src: "{{ item }}"
    dest: "{{ ssl_server_dir }}"
    mode: "0640"
    group: "{{ hadoop_group}}"
    owner: "root"
  with_fileglob:
    - "./ssl/{{ inventory_hostname }}-keystore.jks"
    - "./ssl/{{ inventory_hostname }}-truststore.jks"
    - "./ssl/all.jks"

- name: uploading http secret to {{ host }}
  copy:
    src: "{{ item }}"
    dest: "/etc/security/"
    mode: "0440"
    group: "{{ hadoop_group}}"
    owner: "root"
  with_fileglob:
    - "./ssl/http_secret"

- name: Copy Hadoop config files
  template:
    src: "{{ item }}"
    dest: "{{ hadoop_config_path }}/"
    mode: 0640
    owner: "root"
    group: "{{ hadoop_group }}"
  with_fileglob:
    - "templates/hadoop_conf/*"