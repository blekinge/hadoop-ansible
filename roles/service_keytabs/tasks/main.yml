---
- name: Create service keytabs dir
  file:
    owner: root
    group: "{{ hadoop_group }}"
    mode: 0750
    path: "{{ dir }}"
    state: "directory"
  loop: '{{ kerberos_conf | selectattr("host", "eq", inventory_hostname) | map(attribute="keytab_file") | map("dirname") |unique| list}}'
  loop_control:
    loop_var: "dir"

- name: Create system user keytabs dir
  file:
    owner: root
    group: "{{ hadoop_group }}"
    mode: 0750
    path: "{{ dir }}"
    state: "directory"
  loop: '{{ kerberos_conf | selectattr("type", "eq", "USER") | map(attribute="keytab_file") | map("dirname") |unique| list}}'
  loop_control:
    loop_var: "dir"

# Service keytabs are created directly on the host that needs them, as they are host-specific
- name: Retrieving keytab for host
  include: retrieveKeytab.yml entry="{{item}}"
  with_items: '{{ kerberos_conf | selectattr("host", "eq", inventory_hostname) | list}}'
  #DO NOT DO THIS FOR THE IPA SERVER AS YOU MIGHT OVERWRITE SOMETHING IT USES.
  # the spnego/HTTP certificate has the same principal as /var/lib/ipa/gssproxy/http.keytab and will break the server when
  #   regenerated

# System user keytabs are created on the ipa server and distributed below
- name: Retrieving keytab for user
  include: retrieveKeytab.yml entry="{{item}}"
  with_items: '{{ kerberos_conf | selectattr("type", "eq", "USER") | list}}'
  when: '"ipaserver" in group_names'


- name: fetching keytabs for headless users to localhost
  fetch:
    src: "{{ item }}"
    dest: keytabs/
    flat: true
  loop: '{{ kerberos_conf | selectattr("type", "eq", "USER") | map(attribute="keytab_file") | unique| list}}'
  when: '"ipaserver" in group_names'

- name: uploading headless keytabs to {{ host }}
  copy:
    src: "{{ item }}"
    dest: "/etc/security/keytabs/"
  with_fileglob:
    - "./keytabs/*"
  when: '"ipaserver" not in group_names'

