- name: Install dependencies
  ansible.builtin.package:
    name:
      - R-devel
      - texlive-framed
      - texlive-titling
    state: present

- name: convert gpg
  shell:
    cmd: "{{ item }}"
  args:
    creates: rstudio-signing.key
  with_items:
    - gpg --keyserver hkp://keys.gnupg.net --recv-keys 3F32EE77E331692F
    - gpg --armor --export 3F32EE77E331692F > rstudio-signing.key

- name: Import Rstudio GPG key.
  ansible.builtin.rpm_key:
    key: rstudio-signing.key
    state: present

- name: get newest version of RStudio
  when: rstudio_version_fixed is not defined
  block:
    - name: Check the newest version of RStudio
      ansible.builtin.uri:
        url: http://download2.rstudio.org/current.ver
        return_content: yes
      register: rstudio_version

    - name: Get the installable package of RStudio Server for RedHat 6-7
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6 and ansible_distribution_major_version|int <= 7
      ansible.builtin.get_url:
        url: "{{ rstudio_redhat6_download_url }}/rstudio-server-rhel-{{ rstudio_version.content | regex_replace('-1$','') }}-x86_64.rpm"
        dest: /tmp/rstudio.rpm

    - name: Get the installable package of RStudio Server for RedHat 8+
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8
      ansible.builtin.get_url:
        url: "{{ rstudio_redhat8_download_url }}/rstudio-server-rhel-{{ rstudio_version.content | regex_replace('-1$','') }}-x86_64.rpm"
        dest: /tmp/rstudio.rpm


- name: rstudio install
  ansible.builtin.package:
    name: /tmp/rstudio.rpm
    state: present

- name: Stop rstudio server if running
  shell:
    cmd: rstudio-server stop

- name: remove local rstudio-server user
  ansible.builtin.user:
    name: rstudio-server
    state: absent
    remove: yes
    local: yes


- name: setup PAM
  ansible.builtin.copy:
    backup: yes
    src: /etc/pam.d/login
    dest: "/etc/pam.d/rstudio"
    remote_src: yes

- name: Restrict users to humans
  ansible.builtin.lineinfile:
    path: "{{ rstudio_config_file }}"
    line: "auth-required-user-group={{ users_group.name }}"
    regexp: "^auth-required-user-group=.*$"
    create: yes

- name: "RStudio should run as {{ rstudio_user.name }}"
  ansible.builtin.lineinfile:
    path: "{{ rstudio_config_file }}"
    line: "server-user={{ rstudio_user.name }}"
    regexp: "^server-user=.*$"
    create: yes


#
#- name: "RStudio ssl config"
#  ansible.builtin.lineinfile:
#    path: /etc/rstudio/rstudio-server.conf
#    line: "ssl-enabled=1"
#    regexp: "^ssl-enabled=.*$"
#    create: yes
#
#- name: "RStudio ssl config cert"
#  ansible.builtin.lineinfile:
#    path: /etc/rstudio/rstudio-server.conf
#    line: "ssl-certificate={{ ssl_cert_dir }}/{{ ansible_fqdn }}.crt"
#    regexp: "^ssl-certificate=.*$"
#    create: yes
#
#
#- name: "RStudio ssl config key"
#  ansible.builtin.lineinfile:
#    path: /etc/rstudio/rstudio-server.conf
#    line: "ssl-certificate-key={{ ssl_key_dir }}/{{ ansible_fqdn }}-private.pem"
#    regexp: "^ssl-certificate-key=.*$"
#    create: yes


- name: "RStudio port"
  ansible.builtin.lineinfile:
    path: "{{ rstudio_config_file }}"
    line: "www-port={{ rstudio_server_http_port }}"
    regexp: "^www-port==.*$"
    create: yes

- name: Create rstudio logging folder if it did not exist already
  ansible.builtin.file:
    state: directory
    path:
      - /var/log/rstudio-server
      - /var/lib/rstudio-server
    owner: "{{ rstudio_user.name }}"
    group: "{{ rstudio_user.group }}"
    recurse: yes

#https://community.rstudio.com/t/rserver-1692-error-system-error-13-permission-denied/46972/7
- name: Put SELinux in permissive mode, logging actions that would be blocked.
  ansible.posix.selinux: #TODO RStudio SELinux
    policy: targeted
    state: permissive

- name: (Re)Start RStudio Server service
  ansible.builtin.systemd:
    service: rstudio-server
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Configure Spark home
  ansible.builtin.lineinfile:
    path:  /usr/lib64/R/etc/Renviron
    line: "SPARK_HOME={{ current_spark_home }}"
    regexp: "^SPARK_HOME=.*$"
    create: yes

- name: install Sparklyr dependencies
  ansible.builtin.package:
    name:
      - libxml2-devel
      - libcurl-devel
      - openssl-devel
    state: present

#If nessesary, remove all installed packages. This can solve problems with installed packages that have been compiled to an older R version
#
#sudo R --vanilla << EOR
#remove.packages( installed.packages( priority = "NA" )[,1] )
#EOR

# IT would be nice to get the output here, but alas, this is ansible and output is bad...
# https://github.com/ansible/proposals/issues/92
# https://github.com/allx/remote_logging
# https://stackoverflow.com/questions/41194021/how-can-i-show-progress-for-a-long-running-ansible-task
- name: install R Sparklyr
  shell:
    cmd: Rscript -e 'install.packages("sparklyr", repos="http://cran.rstudio.com/")'

- name: install Apache Arrow
  shell:
    cmd: Rscript -e 'install.packages("arrow", repos="http://cran.rstudio.com/")'



#  https://github.com/freeipa/ansible-freeipa/blob/master/README-hbacsvc.md
- name: "Projects HBAC service definitions"
  delegate_to: "{{ groups['hostgroup_ipaserver'] | first }}"
  run_once: true
  freeipa.ansible_freeipa.ipahbacsvc:
    ipaadmin_password: "{{ ipaadmin_password }}"
    name: "rstudio" #Name should match name in /etc/pam.d/ (rstudio)
    description: "login to the {{ rstudio_user.name }} process"
