---

- name: install rsync so we can use ansible synchronize
  package:
    name: rsync
    state: present


#All this is done only on ipaserver host
- name: Create ssl working dir
  file:
    path: "./ssl/"
    state: "directory"
    owner: root
    group: "{{ hadoop_group }}"
    mode: 0755


# TODO use real certificates...
# Created from https://getthekt.com/securing-hadoop-cluster-part-1-ssltls-for-hdfs-and-yarn/
- name: Create server ssl key
  command: keytool -genkey -alias  {{ ssl_host | quote }} -keyalg rsa -keysize {{ ssl_key_size | quote }} -dname "CN={{ ssl_host }},OU=demo,O=MyOrg,L=Pune,ST=MH,C=IN" -keypass {{ ssl_key_pass | quote }} -keystore ./ssl/{{ ssl_host }}-keystore.jks -storepass {{ ssl_keystore_pass | quote}}
# keytool -genkey -alias nn1.hadoop.com -keyalg rsa -keysize 1024 -dname “CN=nn1.hadoop.com,OU=demo,O=MyOrg,L=Pune,ST=MH,C=IN” -keypass host@123 -keystore nn1-keystore.jks -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}-keystore.jks"
  loop: '{{ groups["all"]  }}'
  loop_control:
    loop_var: "ssl_host"


- name: Export the certificate public key to a certificate file
  command: keytool -export -alias {{ ssl_host }} -keystore ./ssl/{{ ssl_host }}-keystore.jks -rfc -file ./ssl/{{ ssl_host }}.crt -storepass {{ ssl_keystore_pass | quote }}
# keytool -export -alias nn1.hadoop.com -keystore nn1-keystore.jks -rfc -file nn1.crt -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}.crt"
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"

- name: Import the certificate to the trust store file.
  command: keytool -import -noprompt -alias {{ ssl_host }} -file ./ssl/{{ ssl_host }}.crt -keystore ./ssl/{{ ssl_host }}-truststore.jks -storepass {{ ssl_truststore_pass | quote }}
# keytool -import -noprompt -alias nn1.hadoop.com -file nn1.crt -keystore nn1-truststore.jks -storepass host@123
  args:
    creates: "./ssl/{{ ssl_host }}-truststore.jks"
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"

- name: Create a single trust store file that contains the public key from all certificates.
  shell: |
    keytool -list -keystore ./ssl/all.jks  -storepass {{ ssl_truststore_pass | quote }}  -alias {{ ssl_host  }} ||
    keytool -import -noprompt -alias {{ ssl_host | quote }} -file ./ssl/{{ ssl_host  }}.crt -keystore ./ssl/all.jks -storepass {{ ssl_truststore_pass | quote }}
  # keytool -import -noprompt -alias nn1.hadoop.com -file nn1.crt -keystore truststore.jks -storepass host@123
  loop: '{{ groups["all"]  }}'
  loop_control:
      loop_var: "ssl_host"


- name: Create http secret.
  command: dd if=/dev/urandom of=./ssl/http_secret bs=1024 count=1
  args:
    creates: ./ssl/http_secret

