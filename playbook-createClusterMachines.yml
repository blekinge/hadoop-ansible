## This playbook creates the hosts as virtual VMs in Ovirt

- name: oVirt ansible collection
  hosts: VMs
  gather_facts: False
  serial: 1 # Only create and run 1 at a time. This is nessesary to set the network up correctly
  vars_files:
    - vars/var_sensitive.yml
  # Configure the machines in hosts.yml
  roles:
    - ovirt_new_vm
  collections: # This require the ovirt-ansible plugin installed
    - ovirt.ovirt


- hosts: ipaclients
  vars_files:
    - vars/var_sensitive.yml
  roles:
    - role: updated
    - role: java # Install java
    - role: ipaclient_setup # Set up the ipa clients
    - role: firewalled # Set up the firewall


# Now that the hosts have been added as ipa clients, we can setup the kerberos services
- hosts: ipaserver
  vars_files:
    - vars/var_sensitive.yml
  roles:
    - role: kinit_init
    - role: yak_user_manager
    - role: ssl_certificates_creator
    - role: ipa_service_definitions
    - role: kerberos_system_user_keytabs
      vars:
        create_system_user_keytabs: true
    - role: kinit_destroy


# And now that the ipa server is ready, we can setup services and ssl
- hosts: hadoop_nodes
  vars_files:
    - vars/var_sensitive.yml
  roles:
    - role: ssl_certificates_recipient #Upload ssl certificates to host
    - role: kerberos_service_keytabs #Create the service keytabs
    - role: kerberos_system_user_keytabs
      vars:
        upload_system_user_keytabs: true
    - role: hadoop
    - role: zookeeper
    - role: spark


- name: Setup cluster
  import_playbook: playbook-hadoop-setup.yml


# Now that hdfs is running, we can create the human users

- name: Create users
  import_playbook: playbook-create-users.yml

