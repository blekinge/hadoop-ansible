---
- name: oVirt ansible collection
  hosts: localhost
  connection: local
  vars_files:
    - vars/var_sensitive.yml
  vars:
    hostname: "{{shortname}}.yak2.net"
#    Set shortname as a commandline param -e shortname=hdfs001
  tasks:
    - block:
        - name: Simple A record (IPV4 address) lookup for example.com
          shell: "host {{hostname}} 172.16.215.52 | grep '{{hostname}}' | cut -d' ' -f4 | cut -d'.' -f4"
          register: hostnumberblob
        - set_fact:
            hostnumber: "{{ hostnumberblob.stdout }}"

        - debug:
            var: hostnumber
        # The use of ovirt.ovirt before ovirt_auth is to check if the collection is correctly loaded
        - name: Obtain SSO token with using username/password credentials
          ovirt.ovirt.ovirt_auth:
            url: https://ovim001.adm.yak2.net/ovirt-engine/api
            username: admin@internal
            password: "{{ ovirt_password }}"

        # Previous task generated I(ovirt_auth) fact, which you can later use
        # in different modules as follows:

        - name: "create vm {{shortname}}"
          ovirt.ovirt.ovirt_vm:
            auth: "{{ ovirt_auth }}"

            state: present
            name: "{{shortname}}"
            template: SDL8-4R-30D-MIN-TMPL
            clone: yes
            cluster: KAC


        - name: create yak2net nic
          ovirt.ovirt.ovirt_nic:
            auth: "{{ ovirt_auth }}"

            state: present
            vm: "{{shortname}}"
            name: nic1
            profile: yak2net
            network: yak2net

        - name: create ovirtmgmt nic
          ovirt.ovirt.ovirt_nic:
            auth: "{{ ovirt_auth }}"

            state: present
            vm: "{{shortname}}"
            name: nic2
            profile: ovirtmgmt
            network: ovirtmgmt

        - name: "start vm {{shortname}}"
          ovirt.ovirt.ovirt_vm:
            auth: "{{ ovirt_auth }}"
            state: running
            name: "{{shortname}}"
            cluster: KAC

        - name: "ssh to host and change hostname"
          shell: ssh -A root@172.16.215.254 "hostnamectl set-hostname {{hostname}}"

        - name: "ssh to host and change networks"
          shell: ssh -A root@172.16.215.254 "nmcli con add type ethernet con-name yak2net ifname ens3 ipv4.method manual ipv4.addresses 172.16.215.{{hostnumber}}/24 ipv4.dns 172.16.215.52,172.16.215.53 ipv4.dns-search yak2.net,adm.yak2.net,dmz.yak2.net,nfs.yak2.net ipv4.gateway 172.16.215.51; nmcli con add type ethernet con-name adm ifname ens4 ipv4.method manual ipv4.addresses 172.16.216.{{hostnumber}}/24 ipv4.routes \"172.16.7.0/24 172.16.216.1,172.18.0.0/16 172.16.216.1,172.28.1.0/24 172.16.216.1,130.225.24.0/23 172.16.216.1,130.226.220.0/24 172.16.216.1\"; nmcli con del ens4; nmcli con del ens3;  "

        - name: "Reboot vm to activate new networks"
          ovirt.ovirt.ovirt_vm:
            auth: "{{ ovirt_auth }}"
            state: reboot
            name: "{{shortname}}"
            cluster: KAC

        - name: "Ensure vm is started"
          ovirt.ovirt.ovirt_vm:
            auth: "{{ ovirt_auth }}"
            state: running
            name: "{{shortname}}"
            cluster: KAC
            wait: true

      always:
        - name: Always revoke the SSO token
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"


  collections:
    - ovirt.ovirt